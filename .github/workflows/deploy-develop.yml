name: deploy-develop
on:
  workflow_dispatch:
    inputs:
      branch:
        description: '배포할 브랜치'
        required: true
        default: 'develop'

jobs:
  develop_CICD:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.16.0 ] # 개발환경과 동일하게 맞춤

    steps:
      - name: Checkout source code.
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Create .env file # DEV_ENV 필요
        run: |
          touch .env
          echo "${{ secrets.DEV_ENV }}" >> ./common/.env

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Install AWS SAM
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_DEPLOY_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEPLOY_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: AWS ECR login
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_REGISTRY_URL }}

      - name: Build docker image and push docker images to ecr
        run: |
            docker build -t ai-news-noti-bot-develop .
            docker tag ai-news-noti-bot-develop:latest ${{ secrets.AWS_REGISTRY_URL }}/ai-news-noti-bot-develop:latest
            docker push ${{ secrets.AWS_REGISTRY_URL }}/ai-news-noti-bot-develop:latest

      # TODO sam으로 변경
      - name: Update lambda function
        run: aws lambda update-function-code --function-name ai-news-noti-bot-develop --image-uri ${{ secrets.AWS_REGISTRY_URL }}/ai-news-noti-bot-dev:latest

      - name: Delete untagged images in ECR
        run: |
            # Get untagged image digest
            UNTAGGED_IMAGES=$(aws ecr describe-images --repository-name ai-news-noti-bot-develop --query 'imageDetails[?imageTags==null].imageDigest' --output json)
            
            # Delete untagged images
            if [ -n "$UNTAGGED_IMAGES" ]; then
              for image in $UNTAGGED_IMAGES; do
                  aws ecr batch-delete-image --repository-name ai-news-noti-bot-develop --image-ids imageDigest=$image
              done
            fi

  deploy_static_page:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code.
        uses: actions/checkout@v2
        with:
        ref: ${{ github.event.inputs.branch }}

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Sync static web files
        run: aws s3 sync ./pages/postSiteForm s3://${{ secrets.AWS_S3_BUCKET_NAME }}

